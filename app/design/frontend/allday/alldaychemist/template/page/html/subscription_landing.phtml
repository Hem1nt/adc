
 <div id="toTop">
 	<div class="loader" style="display:none;">&nbsp;</div>
    <div class="subscribe">
        <div class="subscribe-innerdiv">
	        Get to know the latest health tips!
	        <input type="text" id="txtEmailDiv" placeholder="Subscribe To Our Newsletter..." class="subs" 
	        onblur="return showText(this, 'Please enter your email-id here')" onfocus="return hideText(this, 'Please enter your email-id here')">
	       <input type="button" id="subscribebtn" value="Subscribe" style="width: 110px; height: 30px; margin-left: 10px !important;">
    	</div>
    </div>
	<div class="subscribe_msg" style="display:none;">
		<div class="subscribe-innerdiv">Thank you for Subscribing us.</div>
	</div>
	<a id="show_subs" class="subs_a" onclick="" style="display:none; bottom: 7px; color: #FFFFFF; position: fixed; left: 8px; text-decoration: none; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; border: 1px solid #fff; padding: 2px">&gt;</a>
    <a id="close_subs" class="subs_a" onclick="" style="bottom: 7px; color: #FFFFFF; position: fixed; left: 8px; text-decoration: none; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; border: 1px solid #fff; padding: 2px">X</a>
</div>

<style type="text/css">
.subs_a {cursor: pointer;}
#toTop{width: 100%; position: relative; bottom: 0px; position: fixed; background-color: #ccc; padding: 10px; margin: 0px auto; left: 0px; z-index: 190;} 
.subscribe,.subscribe_msg{text-align: center;}
.subscribe_msg{padding: 5px;}
.subscribe-innerdiv{margin:auto;width:100%; display: inline-block;}
#toTop {
position: fixed;
bottom: 0px;
cursor: default;
color: #fff;
font-size: 11px;
text-align: center;
width: 100%;
height:30px;
background: #666666 !important;
font-size: 14px;
font-weight: bold;
padding: 5px 0;
left: 0;
z-index: 500;
}

#toTop input.subs {
-moz-border-radius: 3px;
-webkit-border-radius: 3px;
border-radius: 3px;
border: 1px solid #ccc;
padding: 5px;
width: 200px;
margin-left: 10px;
font-size: 12px;
}

#subscribebtn {
-webkit-align-items: flex-start;
text-align: center;
cursor: default;
color: buttontext;
padding: 2px 10px 3px;
background: #970045 !important;
border-radius: 6px;
border: 2px outset buttonface;
border-image-source: initial;
border-image-slice: initial;
border-image-width: initial;
border-image-outset: initial;
border-image-repeat: initial;
background-color: buttonface;
box-sizing: border-box;
}

</style>
 <script type="text/javascript">

// jQuery(document).ready(function(){
// 	//console.log(jQuery.browser);
// 	$("#hello").html(window.location.protocol);
// 	var subsclose_val = get_cookie("subsclose");
	
// 	if(subsclose_val=="yes") {
// 		CloseSubscription(1);
// 	}
// 	$("#close_subs").click(function(){
// 		CloseSubscription();
// 	});
// 	$("#show_subs").click(function(){
// 		ShowSubscription();
// 	});

// 	$('#subscribebtn').click(function(){
// 		if($('#txtEmailDiv').val()==''){
// 	       // alert('please enter the email id');
// 	       $('#txtEmailDiv').val('Please enter your email address here');
// 	    }
// 	    else{
// 	        var emailid = $('#txtEmailDiv').val();
// 	        var check = IsEmail(emailid);
	    
// 	        if(check){
// 				var url = 'http://' + window.location.hostname + '/';
// 				if (window.location.protocol === 'https:') {
// 					url = 'https://' + window.location.hostname + '/';
// 				}
// 				var url = url+'newsletter/subscriber/newSub';
		
// 				$.ajax({
// 					type: 'POST',
// 					url: url,
// 					data: {email:emailid},
// 					success: function(resultData) {
// 						$('.subscribe').css('display','none');
// 						$('.subscribe_msg').html(resultData).css('display','block');
// 						setTimeout(function(){
// 							$('.subscribe_msg').animate({display: "none"}, 500, function(){
// 								$('.subscribe').show(); $('#toTop #txtEmailDiv').val('');
// 								if(resultData == "Thank you for your subscription.") {
// 									CloseSubscription();
// 								}
// 							});
// 						}, 2000);
// 					}
// 				});
// 	        }
// 	        else{
// 	       		alert("Please enter valid email.");
// 	       		$('#txtEmailDiv').val('Please enter your email address here').focus();
// 	        }
	        
// 	   	}
//     });
// });

// function IsEmail(email) {
//   var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
//   return regex.test(email);
// }
// function hideText(element, defaultVal) {
// 	if (element.value == defaultVal || element.value == "Invalid Email Address" || element.value == "Please enter a valid email address" || element.value == "Thank You" || element.value == "Already Subscribed") {
// 		element.value = '';
// 	}
// }
// function showText(element, defaultVal) {
// 	if (element.value == '') {
// 		element.value = defaultVal;
// 	}
// }
// function CloseSubscription(val) {
// 		//alert(val);
// 		$('#toTop .subscribe').hide(); $('#toTop .subscribe_msg').hide();
// 		if(val==1) {
// 			$('#toTop').css('width', '35px'); $('#close_subs').hide(); $('#show_subs').show();
// 		} else {
// 			$('#toTop').animate({width: "35px"}, 500, function(){
// 				$('#close_subs').hide(); $('#show_subs').show();
// 			});
// 		}
// 		var cookie_status = get_cookie('subsclose');
// 		if(cookie_status != "yes") {
// 			var now = new Date();
// 			var time = now.getTime();
// 			time += 3600 * 1000 * 700;
// 			now.setTime(time);
// 			document.cookie = 
// 			'subsclose=yes' + 
// 			'; expires=' + now.toGMTString() + 
// 			'; path=/';
// 		}
// 	}
// 	function ShowSubscription() {
// 		$('#toTop').animate({width: window.innerWidth}, 500, function(){
// 			$('#toTop .subscribe').show(); $('#close_subs').show(); $('#show_subs').hide();
// 		});
// 		document.cookie = 
// 		'subsclose=no' + 
// 		'; expires=Thu, 01 Jan 1970 00:00:01 GMT' 
// 		'; path=/';
// 	}
// 	function get_cookie(Name) {
// 		var search = Name + "="
// 		var returnvalue = "";
// 		if (document.cookie.length > 0) {
// 			offset = document.cookie.indexOf(search)
// 			// if cookie exists
// 			if (offset != -1) { 
// 				offset += search.length
// 				// set index of beginning of value
// 				end = document.cookie.indexOf(";", offset);
// 				// set index of end of cookie value
// 				if (end == -1) end = document.cookie.length;
// 				returnvalue=unescape(document.cookie.substring(offset, end))
// 			}
// 		}
// 		return returnvalue;
// 	}
 </script>
